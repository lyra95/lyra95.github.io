<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>crud on ZDoc</title>
    <link>https://lyra95.github.io/tags/crud/</link>
    <description>Recent content in crud on ZDoc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 07 May 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://lyra95.github.io/tags/crud/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>(3) : CRUD commands</title>
        <link>https://lyra95.github.io/docs/mysqltutorial/mysql-3/</link>
        <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://lyra95.github.io/docs/mysqltutorial/mysql-3/</guid>
        <description>본 항목은 생활코딩을 참고하였습니다.
 CRUD란 Create, Read, Update, Delete의 앞글자만 따온 것으로, 데이터베이스의 기본 기능들입니다. sql이라는 언어가 이런 기능들을 어떤 문법으로 지원하는지 봅시다.
이전 포스트에서 tutorial database에 접속했습니다.다음과 같은 정보들이 있다고 합시다:
   id title description created author profile     1 MySQL MySQL is &amp;hellip; 2018-01-10 egoing developer   2 ORACLE Oracle is &amp;hellip; 2018-01-15 egoing developer   3 SQL Server SQL Server is &amp;hellip; 2018-01-18 duru database administrator   4 PostgreSQL PostgreSQL is &amp;hellip; 2018-01-20 taeho data scientist, developer   5 MongoDB MongoDB is &amp;hellip; 2018-01-30 egoing developer    이 정보들을 sql을 통해 데이터베이스에 저장하려고 합니다.</description>
      </item>
      
      <item>
        <title>(4) : CRUD commands, SELECT</title>
        <link>https://lyra95.github.io/docs/mysqltutorial/mysql-4/</link>
        <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://lyra95.github.io/docs/mysqltutorial/mysql-4/</guid>
        <description>본 항목은 생활코딩을 참고하였습니다.
 이전 포스트에서 topic 테이블을 생성하고 레코드들을 추가했습니다.1 2 3 4 5 6 7 8 9 10 11  mysql&amp;gt;SELECT*FROMtopic;+----+------------+--------------------+---------------------+--------+--------------------------+ |id|title|description|created|author|profile|+----+------------+--------------------+---------------------+--------+--------------------------+ |1|MySQL|MySQLis...|2018-01-1000:00:00|egoing|developer||2|ORACLE|Oracleis...|2021-05-0618:17:04|egoing|developer||3|SQLServer|SQLServeris...|2021-05-0618:27:09|duru|databaseadministrator||4|PostgreSQL|PostgreSQLis...|2021-05-0618:27:24|taeho|datascientist,developer||5|MongoDB|MongoDBis...|2021-05-0618:27:43|egoing|developer|+----+------------+--------------------+---------------------+--------+--------------------------+ 5rowsinset(0.00sec)  아마 대부분의 경우, 데이터베이스/테이블을 생성하거나 레코드를 추가하거나 하는 일은 많이 없습니다. 하지만 SELECT를 적절히 활용해 원하는 데이터를 찾아야할 일은 많이 있을 겁니다.
MySQL doc을 참고하면, SELECT의 정확한 문법은 다음과 같습니다.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  SELECT[ALL|DISTINCT|DISTINCTROW][HIGH_PRIORITY][STRAIGHT_JOIN][SQL_SMALL_RESULT][SQL_BIG_RESULT][SQL_BUFFER_RESULT][SQL_NO_CACHE][SQL_CALC_FOUND_ROWS]select_expr[,select_expr].</description>
      </item>
      
      <item>
        <title>(5) : CRUD commands, DELETE</title>
        <link>https://lyra95.github.io/docs/mysqltutorial/mysql-5/</link>
        <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://lyra95.github.io/docs/mysqltutorial/mysql-5/</guid>
        <description>DELETE는 어렵지 않습니다.
id값이 3인 레코드를 지워봅시다.
1 2  mysql&amp;gt;DELETEFROMtopicWHEREid=3;QueryOK,1rowaffected(0.00sec)   CAUTION : WHERE을 깜빡하면 모든 레코드가 지워집니다!
 SELECT로 테이블을 확인해봅시다.
1 2 3 4 5 6 7 8 9 10  mysql&amp;gt;SELECT*FROMtopic;+----+------------+--------------------+---------------------+--------+--------------------------+ |id|title|description|created|author|profile|+----+------------+--------------------+---------------------+--------+--------------------------+ |1|MySQL|MySQLis...|2018-01-1000:00:00|egoing|developer||2|ORACLE|Oracleis...|2021-05-0618:17:04|egoing|developer||4|PostgreSQL|PostgreSQLis...|2021-05-0618:27:24|taeho|datascientist,developer||5|MongoDB|MongoDBis...|2021-05-0618:27:43|egoing|developer|+----+------------+--------------------+---------------------+--------+--------------------------+ 4rowsinset(0.00sec)  복습할 겸 이후에 레코드를 추가하면 어떻게 되나 봅시다.
 AUTO_INCREMENT가 어떻게 적용되나 봅시다.
 1 2 3 4 5 6 7 8 9 10 11 12 13 14  mysql&amp;gt;INSERTINTOtopic(title,created)VALUES(&amp;#39;JO&amp;#39;,NOW());QueryOK,1rowaffected(0.00sec)mysql&amp;gt;SELECT*FROMtopic;+----+------------+--------------------+---------------------+--------+--------------------------+ |id|title|description|created|author|profile|+----+------------+--------------------+---------------------+--------+--------------------------+ |1|MySQL|MySQLis.</description>
      </item>
      
    
  </channel>
</rss>