<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>flask on ZDoc</title>
    <link>https://lyra95.github.io/tags/flask/</link>
    <description>Recent content in flask on ZDoc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 11 Jun 2021 18:31:49 +0900</lastBuildDate>
    
        <atom:link href="https://lyra95.github.io/tags/flask/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Flask로 Restful Api (1): 기본 API</title>
        <link>https://lyra95.github.io/docs/flask/rest-api-1/</link>
        <pubDate>Fri, 11 Jun 2021 18:31:49 +0900</pubDate>
        
        <guid>https://lyra95.github.io/docs/flask/rest-api-1/</guid>
        <description>Restful Api란? 특정 약속으로 정해놓은 server-client application 규약이다.
HTTP( or HTTPS) 통신을 이용하여 server와 client간 데이터를 주고받는다.
보통 4가지 오퍼레이션이 있다: get, put, post, delete. 각각 Read, Update, Create, Delete에 대응된다고 보면된다.
예를들어서, 학생들 성적을 관리하는 서버가 있다고 치자. 1번 학생의 성적을 보고 싶다면 get https://{서버주소}/students/1 이런식으로 요청한다. 무엇을 하려고 하는지 링크(URI)자체로 설명이 되고 있다.
그외에도 stateless, cache 등등 여러가지 규약이 있는데, (https://restfulapi.net/)[https://restfulapi.net/]를 참고하는게 더 좋을 것이다.
간단한 server-client application을 쉽게 찍어내기 위한 설계도라고 이해하면 될 것 같다.</description>
      </item>
      
      <item>
        <title>Flask로 Restful Api (2): reqparse로 요청 파싱하기</title>
        <link>https://lyra95.github.io/docs/flask/rest-api-2/</link>
        <pubDate>Fri, 11 Jun 2021 18:31:49 +0900</pubDate>
        
        <guid>https://lyra95.github.io/docs/flask/rest-api-2/</guid>
        <description>전체코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  #main.py from flask import Flask from flask_restful import Api, Resource, reqparse, abort from flask_caching import Cache import time app = Flask(__name__) api = Api(app) config = { &amp;#34;DEBUG&amp;#34;: True, # some Flask specific configs &amp;#34;CACHE_TYPE&amp;#34;: &amp;#34;SimpleCache&amp;#34;, # Flask-Caching related configs &amp;#34;CACHE_DEFAULT_TIMEOUT&amp;#34;: 300 } app.</description>
      </item>
      
      <item>
        <title>Flask로 Restful Api (3): 캐시 설정하기</title>
        <link>https://lyra95.github.io/docs/flask/rest-api-3/</link>
        <pubDate>Fri, 11 Jun 2021 18:31:49 +0900</pubDate>
        
        <guid>https://lyra95.github.io/docs/flask/rest-api-3/</guid>
        <description>전체코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  #main.py from flask import Flask from flask_restful import Api, Resource, reqparse, abort from flask_caching import Cache import time app = Flask(__name__) api = Api(app) config = { &amp;#34;DEBUG&amp;#34;: True, # some Flask specific configs &amp;#34;CACHE_TYPE&amp;#34;: &amp;#34;SimpleCache&amp;#34;, # Flask-Caching related configs &amp;#34;CACHE_DEFAULT_TIMEOUT&amp;#34;: 300 } app.</description>
      </item>
      
      <item>
        <title>Flask로 Restful Api (4): sqlAlchemy로 DB와 연동하기</title>
        <link>https://lyra95.github.io/docs/flask/rest-api-4/</link>
        <pubDate>Fri, 11 Jun 2021 18:31:49 +0900</pubDate>
        
        <guid>https://lyra95.github.io/docs/flask/rest-api-4/</guid>
        <description>전체코드 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83  # main.</description>
      </item>
      
    
  </channel>
</rss>