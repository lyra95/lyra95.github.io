<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data structure on ZDoc</title>
    <link>https://lyra95.github.io/categories/data-structure/</link>
    <description>Recent content in data structure on ZDoc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 28 Apr 2021 02:18:28 +0900</lastBuildDate>
    
        <atom:link href="https://lyra95.github.io/categories/data-structure/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>C&#43;&#43; containers in standard library (draft)</title>
        <link>https://lyra95.github.io/docs/cpp/cpp-standard-library-containers/</link>
        <pubDate>Wed, 28 Apr 2021 02:18:28 +0900</pubDate>
        
        <guid>https://lyra95.github.io/docs/cpp/cpp-standard-library-containers/</guid>
        <description>Sequence Containers vector 기본 array의 강화판. array는 size 정보도 가지고 있지 않고, index bound error도 컴파일 타임에 체크해 주지 않는다. 반면에 vector는 다음과 같은 특징이 있다.
[+] memory에 연속적으로 element들을 저장한다.
[+] .size()를 통해 현재 element 개수를 알 수 있다.
[+] array와 마찬가지로 constant time element access가 가능하다.
[+] .at()같은 index bound를 체크해주는 member function들이 있다.
[+] heap allocation 알아서 해준다. int x[n] 에러의 악몽
[-] 타이핑하기 귀찮다 vector&amp;lt;vector&amp;lt;&amp;hellip;&amp;raquo;
그러니 잘 모르겠으면 vector를 쓰자.</description>
      </item>
      
    
  </channel>
</rss>